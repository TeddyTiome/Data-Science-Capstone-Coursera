file.info("~/Desktop/Capstone/final/en_US/en_US.blogs.txt")
summary(file.info("~/Desktop/Capstone/final/en_US/en_US.blogs.txt"))
file.info("~/Desktop/Capstone/final/en_US/en_US.blogs.txt")$size/1024/1024
twitter <- readLines("~/Desktop/Capstone/final/en_US/en_US.twitter.txt", encoding="UTF-8")
blogs <- readLines("~/Desktop/Capstone/final/en_US/en_US.blogs.txt", encoding="UTF-8")
news  <- readLines("~/Desktop/Capstone/final/en_US/en_US.news.txt", encoding="UTF-8")
length(c(twitter,blogs,news))
length(twitter,blogs,news)
length(twitter)
library(knitr)
library(NLP)
library(tm)
library(stringi)
library(stringr)
install.packages("tm")
n
install.packages("~/Desktop/tm_0.6-2.tar.gz", repos = NULL, type = "source")
install.packages("~/Desktop/tm_0.6-2.tgz", repos = NULL)
library(knitr)
library(NLP)
library(tm)
library(stringi)
library(stringr)
library(knitr)
library(NLP)
library(tm)
library(stringi)
library(stringr)
library(RWeka)
library(wordcloud)
install.packages("rJava")
library(RWeka)
install.packages("RWeka")
library(RWeka)
twitter.path<-"~/Desktop/Capstone/final/en_US/en_US.twitter.txt"
blogs.path<-"~/Desktop/Capstone/final/en_US/en_US.blogs.txt"
news.path<-"~/Desktop/Capstone/final/en_US/en_US.news.txt"
twitter <- readLines(twitter.path, encoding="UTF-8")
blogs <- readLines(blogs.path, encoding="UTF-8")
news  <- readLines(news.path, encoding="UTF-8")
library(RWeka)
install.packages("~/Desktop/RWeka_0.4-29.tar.gz", repos = NULL, type = "source")
install.packages("~/Desktop/RWekajars_3.9.0-1.tar.gz", repos = NULL, type = "source")
library(RWeka)
Sys.getenv("JAVA_HOME")
Sys.setenv(JAVA_HOME="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/bin/java")
library(RWeka)
library(RWeka)
library(knitr)
library(NLP)
library(tm)
library(stringi)
library(stringr)
library(wordcloud)
sc<-file.info(c(twitter.path,blogs.path,news.path))$size/1024/1024
sc
wc<-rbind(
summary(stri_count_words(twitter)),
summary(stri_count_words(blogs)),
summary(stri_count_words(news))
)
row.names(wc)<-c("twitter","blogs","news")
wcs<-c(
sum(stri_count_words(twitter)),
sum(stri_count_words(blogs)),
sum(stri_count_words(news))
)
wc
wcs
lc<-cbind(
stri_stats_general(twitter),
stri_stats_general(blogs),
stri_stats_general(news)
)
colnames(lc)<-c("twitter","blogs","news")
lc
bdt<-cbind(lc[1,],sc,wcs)
colnames(bdt)<-c("line count","size in MB","word count")
bdt
set.seed(24)
blogs.st <- blogs[sample(length(blogs), 0.2*length(blogs))]
news.st <- news[sample(length(news), 0.2*length(news))]
twitter.st <- twitter[sample(length(twitter), 0.2*length(twitter))]
corpus.s <- VCorpus(VectorSource(
paste(
blogs.st[1:2500], news.st[1:2500], twitter.st[1:2500]
)
))
corpus.s <- tm_map(corpus.s, content_transformer(tolower))
corpus.s <- tm_map(corpus.s, stripWhitespace)
corpus.s <- tm_map(corpus.s, removeNumbers)
corpus.s <- tm_map(corpus.s, removePunctuation)
corpus.s <- tm_map(corpus.s, removeWords, stopwords("english"))
cor.mat <- as.matrix(DocumentTermMatrix(corpus.s))
frequency <- sort(colSums(cor.mat),decreasing = T)
wordcloud(names(frequency)[1:25], frequency[1:25])
barplot(names(frequency[1:25],frequency[1:25]))
hist(names(frequency[1:25],frequency[1:25]))
names(frequency[1:25]
)
frequency[1:25]
hist(names(frequency[1:25],frequency[1:25,2]))
hist(names(frequency[1:25],frequency[2,1:25]))
frequency[2,1:25]
frequency[1]
hist(frequency[1:20])
hist(xlab=names(frequency[1:25],frequency[1:25]))
data.frame(frequency)
data.frame(frequency)[1:25]
data.frame(frequency)[1:25,1]
data.frame(frequency)[1:25,2]
data.frame(frequency)[1,1:25]
hist(names(frequency[1:25]),data.frame(frequency)[1:25,1])
hist(xlab=names(frequency[1:25]),data.frame(frequency)[1:25,1])
hist(x=names(frequency[1:25]),y=data.frame(frequency)[1:25,1])
barplot(frequency[1:20],
ylab='token frequency',
main='top 20 most frequent words in all files',
names.arg=names(frequency)[1:20],
col="blue", las=2, cex.names=.7)
corpus.d <-data.frame(text=unlist(sapply(corpus.s,
`[`, "content")), stringsAsFactors=F)
find.n.gram <- function(x, n) {
n.gram <- NGramTokenizer(x, Weka_control(min = n, max = n))
n.gram <- data.frame(table(n.gram))
n.gram <- ngram[order(n.gram$Freq,decreasing = TRUE),][1:100,]
colnames(n.gram) <- c("String","Count")
n.gram
}
grams2 <- find.n.gram(corpus.d, 2)
View(bdt)
shiny::runApp('Capstone')
runApp('Capstone')
library(rsconnect)
rsconnect::setAccountInfo
library(rsconnect)
deployApp()
deployApp()
shiny::runApp('Capstone')
library(rsconnect)
deployApp()
deployApp()
setwd("~/Desktop/Capstone")
library(rsconnect)
deployApp()
shiny::runApp()
deployApp()
